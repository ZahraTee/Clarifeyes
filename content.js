
//Globals are bad, but sometimes a necessary evil.
var token;

//Keys defined in popup.js
getToken(keys);

//Gets the token using the keys the user submits in the popup form.
function getToken(keys)
{
	$.post("https://api.clarifai.com/v1/token/", {grant_type: "client_credentials", client_id: keys[0], client_secret: keys[1]}, function(result){
        token = result;
        console.log(token.access_token);
        imgs = $('img');
		for (var i = 0; i < imgs.length; i++) {

			//Only consider images larger than 200px in width or height to avoid processing icons.
			if (imgs[i].width > 200 || imgs[i].height > 200) {
				tagImage(imgs[i], imgs[i].src);
			}
			
		}
	});
}

function tagImage(image_element,image_url)
{
	//Make sure that the image url is something we can parse.
	if (image_url == null || image_url == "") {
		return; 
	}

	//Image formats that can be processed by the Clarifai API.
	var pic_formats = ["jpg", "jpeg", "png", "gif", "bmp", "tiff"];
	var count;
	for (var i in pic_formats) {
		if (endsWith(image_url, pic_formats[i])) { 
			count++; 
		}
	}
	//No need to continue if there are no images we can upload!
	if (count == 0) {
		return;
	} 

	//Make a POST request to the Clarifai tags API with the image url we want to tag.
	$.ajax({
		url: 'https://api.clarifai.com/v1/tag/',
		type: 'POST',
		beforeSend: function (xhr) {
		    xhr.setRequestHeader('Authorization', 'bearer ' + token.access_token);
		},
		data: {url: image_url},
		success: function (object) {
			console.log(object);
			for (i = 0; i < object.results.length; i++) { 
				var docid = object.results[i].docid;
				var keywords = object.results[i].result.tag.classes;
				var alttext = ""
				for (j = 0; j < keywords.length; j++) {
					alttext = alttext + " " + keywords[j];
				}
				//Add the keywords to the image's alt attribute. Appended by "Clarifai Image:" to distinguish Clarifeyes-generated alt tags.
				$(image_element).attr("alt", "Clarifai Image:" + alttext);

				//Dynamically append the HTML for the buttons generated by createWordButtons().
				$(image_element).after('<div class="overlay">' + createWordButtons(docid, keywords) + '</div>');

				//Store the docid in the class name so it can be identified later.
				wordbuttons = $(".word-btn-"+docid );

				//Add an event listener that removes the tag based on it's docid, extracted from the class name on click event.
				for (k=0; k < wordbuttons.length; k++) {
					wordbuttons[k].addEventListener("click", function() {
						tag = $(this).parent().text().substring(1);
						console.log(docid + " " + tag);
						removeTags(docid, tag);
						$(this).parent().remove();
					});

					$(image_element).each(function(index) {
						$(this).next(".overlay").andSelf().wrapAll("<div class='ce-container'/>")
					});
				}
				
			}
		},
		error: function (err) { console.log(err);
			return "Unreadable image."},
	});
}

//Sends feedback to the Clarifai API to tell it to remove a particular tag for a given image.
function removeTags(docid, tag)
{
	//Make a POST request to the Clarifai feedback API with the doc_id and tag to remove.
	$.ajax({
		url: 'https://api.clarifai.com/v1/feedback/',
		type: 'POST',
		beforeSend: function (xhr) {
		    xhr.setRequestHeader('Authorization', 'bearer ' + token);
		},
		data: {docids: docid, remove_tags: tag},
		success: function (object) {
			console.log(tag);
		},
		error: function (err) { return "Could not remove tag."},
	});
}

//Dynamically creates the word buttons that are overlaid onto images when they are hovered over.
function createWordButtons(docid, word_list)
{
	button_html = '<ul class="word-button-list">'
	for (i=0; i < word_list.length; i++) {
		button_html += '<li class="word-button"><button class="word-btn-' + docid + '">x</button>' + word_list[i] + '</li>'
	}
	button_html += '</ul>'
	return button_html;
}

//Checks if a string ends with a particular suffix.
function endsWith(str, suffix) {
    return str.indexOf(suffix, str.length - suffix.length) !== -1;
}
